#!/bin/bash
set -e

# Drop into '$dstrcdir' whatever you want transported to the remote server,
# once there, use the 'sshrc' script to customize startup.
# WARNING: bash cmdline length can only be so big, data has to fit there.
packenv() {
  local dstrcdir="/tmp/rudolphrc.tmp"
	mkdir -p "$dstrcdir"
  # setup bash remote environment
  cat ~/Source/dotfiles/bashrc |
    sed "s!~/Source/shlibs/!${dstrcdir}/!" > "$dstrcdir/bashrc"
  cp ~/Source/dotfiles/inputrc "$dstrcdir/inputrc"
  cp ~/Source/shlibs/*.lib.sh "$dstrcdir/" &>/dev/null
  # setup gdb
  cat ~/Source/dotfiles/gdbinit |
    sed "s!~/Source/dotfiles/!${dstrcdir}/!" > "$dstrcdir/gdbinit"
  cp ~/Source/dotfiles/stl-views.gdb "$dstrcdir/stl-views.gdb"
  # adjust vim files for remote environemnt
	mkdir -p "$dstrcdir/vimfiles"
  cat ~/Source/dotfiles/vimrc |
    sed -e "s!~/Source/dotfiles/!${dstrcdir}/!" \
        -e "s!~/.vimfiles!${dstrcdir}/vimfiles!" \
    > "$dstrcdir/vimrc"
  # copy some binaries
  mkdir -p "$dstrcdir/bin"
  cp ~/Source/shlibs/csv2d \
     ~/Source/shlibs/d2fw \
     ~/Source/shlibs/l2f \
  "$dstrcdir/bin/"
  # remote startup script
  cat > "$dstrcdir/sshrc" <<-EOF
		HOSTPROMPT=1 source '$dstrcdir/bashrc'
		export PATH="$dstrcdir/bin:\$PATH"
		bind -f '$dstrcdir/inputrc'
		alias vim='vim -u $dstrcdir/vimrc'
		alias gdb='gdb -x $dstrcdir/gdbinit'
		trap "rm -rf '/tmp/rudolphrc.tmp'; exit" 0
EOF
  cd /tmp/ && tar cJf - "rudolphrc.tmp" | base64 &&
    rm -rf "$dstrcdir"
}

function sshrc {
  ssh -t "$@" "
    echo '$(packenv)' | base64 -d | tar xJf - -C /tmp
    exec bash --rcfile '/tmp/rudolphrc.tmp/sshrc'"
}

sshrc "$@"
