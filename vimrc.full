" Need to toggle custom filetype detections (required for Vundle)
filetype off


" Setup Vundle plugin manager
set rtp+=~/.nvim/bundle/Vundle.vim,~/.vim/bundle/Vundle.vim
call vundle#begin(has('nvim') ? expand("~/.nvim/bundle")
                            \ : expand("~/.vim/bundle"))
Plugin 'VundleVim/Vundle.vim'
" Linting + Autocompletion (https://langserver.org/)
Plugin 'w0rp/ale'
" Colorscheme tweaks
Plugin 'chriskempson/base16-vim'
" Easy comments
Plugin 'The-NERD-Commenter'
" Used for exchanging windows
Plugin 't9md/vim-choosewin'
" Search for recently opened files
Plugin 'Shougo/denite.nvim', {'do': ':UpdateRemotePlugins'}
Plugin 'Shougo/neomru.vim'
" Autoclose matching parenthesis/braces/etc
Plugin 'Raimondi/delimitMate'
" Incremental visual-mode selection
Plugin 'terryma/vim-expand-region'
" Match enhanced text-objects
Plugin 'wellle/targets.vim'

Plugin 'Tabular'                  " text aligning

call vundle#end()
" Toggle things on (after Vundle has loaded stuff)
filetype plugin indent on
syntax enable


" Plugin 'w0rp/ale'
" - rust: rustup component add rls --toolchain nightly
" - go:  go get -u github.com/sourcegraph/go-langserver
" - cpp: clang-tools-extra has clangd
let g:ale_sign_error = 'x'
let g:ale_sign_warning = '!'
let g:ale_completion_enabled = 1
let g:ale_rust_rls_toolchain = 'stable'
let g:ale_linters = {
  \ 'rust': ['rls'],
  \ 'go': ['golangserver', 'gofmt', 'golint', 'govet'],
\ }
nnoremap <Leader>ad :ALEGoToDefinition<CR>
nnoremap <Leader>af :ALEFix<CR>
nnoremap <Leader>ar :ALEFindReferences<CR>
nnoremap <silent> K :ALEHover<CR>

" Make Tab circle through autocomplete options in insert mode
inoremap <silent><expr> <Tab> pumvisible() ? "\<C-n>" : "\<TAB>"
inoremap <silent><expr> <S-Tab> pumvisible() ? "\<C-p>" : "\<S-TAB>"

" Plugin 'chriskempson/base16-vim'
colorscheme base16-tomorrow-night

" Plugin 'The-NERD-Commenter'
let g:NERDCreateDefaultMappings = 0 " too polluting
map # <Plug>NERDCommenterToggle

" Plugin 't9md/vim-choosewin'
let g:choosewin_overlay_enable = 0
noremap <Leader>- :ChooseWinSwap<CR>

" Denite
nnoremap <leader>ff :Denite -buffer-name=any file buffer<CR>
nnoremap <leader>fr :Denite -buffer-name=mru file_mru<CR>
call denite#custom#map(
  \ 'insert', '<Down>', '<denite:move_to_next_line>', 'noremap')
call denite#custom#map(
  \ 'insert', '<Up>', '<denite:move_to_previous_line>', 'noremap')
call denite#custom#source("_", "matchers", ["matcher/substring"])

" Plugin 'terryma/vim-expand-region'
vmap v <Plug>(expand_region_expand)
vmap V <Plug>(expand_region_shrink)
let g:expand_region_text_objects = {
  \ 'iw'  :0, 'iW'  :0,
  \ 'i"'  :0, 'a"'  :0,
  \ 'i''' :0, 'a''' :0,
  \ 'i]'  :1, 'a]'  :1,
  \ 'ib'  :1, 'ab'  :1,
  \ 'iB'  :1, 'aB'  :1,
  \ 'ip'  :0,
  \ }
