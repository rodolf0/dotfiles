" Setup vim-plug (https://github.com/junegunn/vim-plug)
call plug#begin(has('nvim') ? expand("~/.config/nvim/bundle")
                            \ : expand("~/.vim/bundle"))
" Linting + Autocompletion (https://langserver.org/)
" Plug 'dense-analysis/ale'
" NOTE: CocInstall coc-pyright, coc-rust-analyzer, coc-go
Plug 'neoclide/coc.nvim', {'branch': 'release'}
" Colorscheme tweaks
Plug 'sainnhe/sonokai'
Plug 'itchyny/lightline.vim'
" Easy comments
Plug 'tpope/vim-commentary'
" Used for exchanging windows
Plug 't9md/vim-choosewin'
" Search for recently opened files
Plug 'Shougo/denite.nvim', {'do': ':UpdateRemotePlugins'}
Plug 'Shougo/neomru.vim'
" Autoclose matching parenthesis/braces/etc
Plug 'Raimondi/delimitMate'
" Incremental visual-mode selection
Plug 'terryma/vim-expand-region'
" Match enhanced text-objects
Plug 'wellle/targets.vim'
" Rust syntax
Plug 'rust-lang/rust.vim'
" Jump around
Plug 'zsugabubus/vim-jumpmotion'
" File explorer
Plug 'kyazdani42/nvim-web-devicons' " for file icons
Plug 'kyazdani42/nvim-tree.lua'
call plug#end()

" nvim-tree.lua
nnoremap <C-n> :NvimTreeToggle<CR>

" Coc
nmap <silent> <leader>ad <Plug>(coc-definition)
nmap <silent> <leader>ai <Plug>(coc-implementation)
nmap <silent> <leader>ar <Plug>(coc-references)

" Make Tab circle through autocomplete options in insert mode
inoremap <silent><expr> <Tab> pumvisible() ? "\<C-n>" : "\<TAB>"
inoremap <silent><expr> <S-Tab> pumvisible() ? "\<C-p>" : "\<S-TAB>"

colorscheme sonokai

" Plug 'tpope/vim-commentary'
nmap # gcc
vmap # gc

" jumpmotion
map <Space> <Plug>(JumpMotion)

" Plug 't9md/vim-choosewin'
let g:choosewin_overlay_enable = 0
noremap <Leader>- :ChooseWinSwap<CR>

" Denite
nnoremap <leader>ff :Denite -start-filter -buffer-name=any file buffer<CR>
nnoremap <leader>fr :Denite -start-filter -buffer-name=mru file_mru<CR>
call denite#custom#source("_", "matchers", ["matcher/substring"])

autocmd FileType denite-filter call s:denite_filter_my_settings()
function! s:denite_filter_my_settings() abort
  inoremap <silent><buffer><expr> <CR> denite#do_map('do_action')
  inoremap <silent><buffer> <C-j>
        \ <Esc><C-w>p:call cursor(line('.')+1,0)<CR><C-w>pA
  inoremap <silent><buffer> <C-k>
        \ <Esc><C-w>p:call cursor(line('.')-1,0)<CR><C-w>pA
  inoremap <silent><buffer><expr> <C-c> denite#do_map('quit')
  inoremap <silent><buffer><expr> <Esc> denite#do_map('quit')
endfunction

" Plug 'terryma/vim-expand-region'
vmap v <Plug>(expand_region_expand)
vmap V <Plug>(expand_region_shrink)
let g:expand_region_text_objects = {
  \ 'iw'  :0, 'iW'  :0,
  \ 'i"'  :0, 'a"'  :0,
  \ 'i''' :0, 'a''' :0,
  \ 'i]'  :1, 'a]'  :1,
  \ 'ib'  :1, 'ab'  :1,
  \ 'iB'  :1, 'aB'  :1,
  \ 'ip'  :0,
  \ }
